name: singularity-build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed .singularity files since last tag
        id: diff
        shell: bash
        run: |
          CURRENT_TAG="${GITHUB_REF##*/}"
          TAGS=($(git tag --sort=-creatordate | head -n 2))
          if [ "${#TAGS[@]}" -lt 2 ]; then
            echo "changed_files=" >> $GITHUB_OUTPUT
            exit 0
          fi
          PREV_TAG=${TAGS[1]}
          CHANGED_FILES=$(git diff --name-only "$PREV_TAG" "$CURRENT_TAG" | grep '\.singularity$' || true)
          if [ -z "$CHANGED_FILES" ]; then
            echo "changed_files=" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "changed_files=$(echo $CHANGED_FILES | tr '\n' ' ')" >> $GITHUB_OUTPUT



      - name: Build .sif files from changed .singularity
        if: steps.diff.outputs.changed_files != ''
        run: |
          CHANGED_FILES="${{ steps.diff.outputs.changed_files }}"
          for FILE in $CHANGED_FILES; do
            BASENAME="${FILE%.singularity}"
            SIF="${BASENAME}.sif"
            echo "Building $SIF from $FILE"
            docker run --rm \
              --privileged \  
              -v $(pwd):/mnt \
              ${{ secrets.DOCKERHUB_USERNAME }}/singularity-builder:latest \
              singularity build /mnt/$SIF /mnt/$FILE
            echo "$SIF" >> sif_list.txt
          done

      - name: Export sif_list
        id: sif
        run: |
          if [ -f sif_list.txt ]; then
            echo "sif_list=$(cat sif_list.txt | tr '\n' ' ')" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: steps.sif.outputs.sif_list != ''
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          files: ${{ steps.sif.outputs.sif_list }}

